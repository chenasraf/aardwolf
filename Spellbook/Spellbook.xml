<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, October 08, 2024, 12:58 am -->
<!-- MuClient version 5.07-pre -->
<!-- Author: Chen Asraf <contact@casraf.dev> (KumoGami) -->

<!-- Plugin "Spellbook" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Spellbook"
   author="KumoGami"
   id="cd6018d26b76bece198ecad8"
   language="Lua"
   purpose="Lists all spells in a sticky window for reference"
   save_state="y"
   date_written="2024-10-08 00:56:30"
   requires="5.07"
   version="1.1"
   >
</plugin>

<!--  Triggers  -->

<triggers>
  <trigger
   group="spellbook"
   match="           Spell name                 Mana  Learned  Spell#"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   group="spellbook"
   match="^\s+ ([\w\s]+[\w])\s+([\d]+)\s+([\d]+)%\s+([\d]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
    <send>
      local name = "%1"
      local mana = "%2"
      local learned = "%3"
      local spn = "%4"

      table.insert(spWinData, {
        level = spWinLv,
        name = name,
        mana = mana,
        learned = learned,
        id = spn
      })
    </send>
  </trigger>
  <trigger
   group="spellbook"
   match="^Level ([\d]+)\s*: ([\w\s]+[\w])\s+([\d]+)\s+([\d]+)%\s+([\d]+)$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
    <send>
      spWinLv = %1
      local name = "%2"
      local mana = "%3"
      local learned = "%4"
      local spn = "%5"

      table.insert(spWinData, {
        level = spWinLv,
        name = name,
        mana = mana,
        learned = learned,
        id = spn
      })
    </send>
  </trigger>
  <trigger
   enabled="y"
   group="spellup"
   match="You are no longer able to breathe underwater."
   sequence="100"
  >
  <send>c 'underwater breathing'</send>
  </trigger>
  <trigger
   group="spellbook"
   match="To see all skills/spells for your class, use 'allspells &lt;class&gt;'"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
    <send>
      require "themed_miniwindows"
      string.lpad = function(str, len, char)
        if char == nil then char = ' ' end
        return string.rep(char, len - #str) .. str
      end

      string.rpad = function(str, len, char)
        if char == nil then char = ' ' end
        return str .. string.rep(char, len - #str)
      end

      function cast_sp(_flags, hotspot_id)
        local spid = tonumber(hotspot_id:match("spell_(%d+)"))
        local sp = nil
        for i, sp in ipairs(spWinData) do
          if sp.id == spid then
            sp = sp
            break
          end
        end
        if sp then
          Send("cast " .. sp.id)
        end
      end

      local lv = 0
      for i, sp in ipairs(spWinData) do
        local line = ""
        if sp.level &gt; lv then
          line = line .. "@W" .. string.rpad("lv " .. sp.level, 7)
          lv = sp.level
        else
          line = line .. string.rpad("", 8)
        end
        line = line .. "@M[@G" .. string.lpad(sp.id, 3) .. "@M] "
        line = line .. "@C" .. string.rpad(sp.name, 30)
        line = line .. "@Y" .. string.lpad(sp.learned .. "%", 4)
        -- spWin:add_text(line)
        local tooltip = "Cast spell: " .. sp.name
        spWin:add_text(
          line,
          true,
          {
            { label = tooltip, start = 1, stop = #line, text = "Send('cast " .. sp.id .. "')" }
          }
        )
        -- ColourNote("yellow", "", "Adding hotspot: spell_" .. sp.id)
        -- WindowAddHotspot(
        --     "spWin", "spell_" .. sp.id,
        --     -- 0, i, 0, 30, -- pos
        --     10, 10, 10, 10, -- pos
        --     "cast_sp", -- mouseover
        --     "cast_sp", -- cancelmouseover
        --     "cast_sp", -- mousedown
        --     "cast_sp", -- cancelmousedown
        --     "cast_sp", -- mouseup
        --     "Cast spell: " .. sp.name, -- tooltip
        --     1, -- cursor: hand
        --     0 -- flags
        -- )
        -- spWin:add_button(
        --   "spell_" .. sp.id,
        --   spWin.bodyleft + 10,
        --   spWin.bodytop + 10 + (i - 1) * 30,
        --   line, -- label
        --   "cast_sp",
        -- )
      end

      ColourNote("yellow", "black", "Output captured to window.")
      EnableTriggerGroup("spellbook", false)
    </send>
  </trigger>
  <trigger
   group="spellbook"
   match="-----------------------------------------------------------"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
  <trigger
   group="spellbook"
   match="---------- -------------------------- ----  -------  ------"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>--</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="^(sp|spe|spell|spells)( .+)?$"
   enabled="y"
   group="spellbook"
   regexp="y"
   send_to="12"
   sequence="100"
  >
    <send>
      require "themed_miniwindows"

      spWin = ThemedTextWindow("spWin", 200, 200, 600, 500, "Spellbook", "center", true, true, true)

      EnableTriggerGroup("spellbook")
      spWinData = {}
      Send("spells%2")
    </send>
  </alias>
</aliases>

<!--  Timers  -->

<timers>
  <timer enabled="y" minute="10" second="0.00" offset_second="0.00"    send_to="12"
group="keepawake" >
  <send>Send("")</send>

  </timer>
</timers>

</muclient>
